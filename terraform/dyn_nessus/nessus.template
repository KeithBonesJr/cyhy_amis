# Provision a Nessus EC2 instance via Ansible
module "cyhy_nessus_ansible_provisioner_$index" {
  source = "github.com/cloudposse/terraform-null-ansible"

  arguments = [
    "--user=$${var.remote_ssh_user}",
    "--ssh-common-args='-o StrictHostKeyChecking=no -o ProxyCommand=\"ssh -W %h:%p -o StrictHostKeyChecking=no -q $${var.remote_ssh_user}@$${var.bastion_public_ip}\"'"
  ]
  envs = [
    # If you terminate all the existing management Nessus instances
    # and then run apply, the list var.nessus_private_ips is empty at
    # that time.  Then there is an error condition when Terraform
    # evaluates what must be done for the apply because you are trying
    # to use element() to reference indices in an empty list.  The
    # list will be populated with the actual values as the apply runs,
    # so we just need to get past the pre-apply stage.  Therefore this
    # ugly hack works.
    #
    # If you find a better way, please use it and get rid of this
    # affront to basic decency.
    "host=$${length(var.nessus_private_ips) > 0 ? element(var.nessus_private_ips, $index) : ""}",
    "bastion_host=$${var.bastion_public_ip}",
    "host_groups=cyhy_runner,nessus",
    "nessus_activation_code=$${var.nessus_activation_codes[$index]}"
  ]
  playbook = "../ansible/playbook.yml"
  dry_run = false
}

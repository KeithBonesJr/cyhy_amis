---
# tasks file for orchestrator

#
# orchestrator secrets
#
- name: Create the secrets directory
  file:
    path: /var/cyhy/orchestrator/secrets
    owner: cyhy
    group: cyhy
    state: directory

- name: Create the credentials file to allow reading the cyhy database
  copy:
    dest: /var/cyhy/orchestrator/secrets/cyhy_read_creds.yml
    owner: cyhy
    group: cyhy
    mode: 0440
    content: |
      version: '1'

      database:
        name: {{ lookup('aws_ssm', '/cyhy/mongo/users/reporter/database') }}
        uri: mongodb://{{ lookup('aws_ssm', '/cyhy/mongo/users/reporter/user') }}:{{ lookup('aws_ssm', '/cyhy/mongo/users/reporter/password') }}@database1.cyhy:27017/{{ lookup('aws_ssm', '/cyhy/mongo/users/reporter/database') }}

- name: Create the credentials file to allow reading the scan database
  copy:
    dest: /var/cyhy/orchestrator/secrets/scan_read_creds.yml
    owner: cyhy
    group: cyhy
    mode: 0440
    content: |
      version: '1'

      database:
        name: {{ lookup('aws_ssm', '/cyhy/mongo/users/scan-reader/database') }}
        uri: mongodb://{{ lookup('aws_ssm', '/cyhy/mongo/users/scan-reader/user') }}:{{ lookup('aws_ssm', '/cyhy/mongo/users/scan-reader/password') }}@database1.cyhy:27017/{{ lookup('aws_ssm', '/cyhy/mongo/users/scan-reader/database') }}

- name: Create the credentials file to allow writing to the scan database
  copy:
    dest: /var/cyhy/orchestrator/secrets/scan_write_creds.yml
    owner: cyhy
    group: cyhy
    mode: 0440
    content: |
      version: '1'

      database:
        name: {{ lookup('aws_ssm', '/cyhy/mongo/users/scan-writer/database') }}
        uri: mongodb://{{ lookup('aws_ssm', '/cyhy/mongo/users/scan-writer/user') }}:{{ lookup('aws_ssm', '/cyhy/mongo/users/scan-writer/password') }}@database1.cyhy:27017/{{ lookup('aws_ssm', '/cyhy/mongo/users/scan-writer/database') }}

- name: Create the AWS config
  copy:
    dest: /var/cyhy/orchestrator/secrets/aws_config
    owner: cyhy
    group: cyhy
    mode: 0440
    content: |
      [profile lambda]
      region = {{ aws_region }}

      [profile elasticsearch]
      region = {{ dmarc_import_aws_region }}


#
# Create a cron job for scanning
#
- name: Add /usr/local/bin to cron's path
  cron:
    env: yes
    name: PATH
    value: /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
    user: cyhy
  when: production_workspace
# This cron job runs at midnight UTC on Saturday mornings, so it
# should be done by 2PM on Saturday.
- name: Create a cron job for BOD 18-01 scanning
  cron:
    name: "BOD 18-01 scanning"
    minute: 0
    hour: 0
    weekday: 6
    user: cyhy
    job: cd /var/cyhy/orchestrator && docker-compose up -d 2>&1 | /usr/bin/logger -t orchestrator
  when: production_workspace
